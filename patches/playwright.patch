diff --git a/lib/worker/workerMain.js b/lib/worker/workerMain.js
index 2d20af235a5b00dbdddbb94d77cdfee54f1ab728..c0c5a704970bc865d1a896734bc486f62f362451 100644
--- a/lib/worker/workerMain.js
+++ b/lib/worker/workerMain.js
@@ -394,7 +394,7 @@ class WorkerMain extends _process.ProcessRunner {
       // In case of failure the worker will be stopped and we have to make sure that afterAll
       // hooks run before worker fixtures teardown.
       for (const suite of reversedSuites) {
-        if (!nextSuites.has(suite) || testInfo._isFailure()) {
+        if (!nextSuites.has(suite)) {
           try {
             await this._runAfterAllHooksForSuite(suite, testInfo);
           } catch (error) {
@@ -407,7 +407,6 @@ class WorkerMain extends _process.ProcessRunner {
     }).catch(() => {}); // Ignore the top-level error, it is already inside TestInfo.errors.
 
     checkForFloatingPromises('afterAll/afterEach hooks');
-    if (testInfo._isFailure()) this._isStopped = true;
     if (this._isStopped) {
       // Run all remaining "afterAll" hooks and teardown all fixtures when worker is shutting down.
       // Mark as "cleaned up" early to avoid running cleanup twice.
